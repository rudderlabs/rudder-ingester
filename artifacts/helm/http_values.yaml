namespace: default
dockerUser: your_docker_user

deployment:
  name: rudder-load
  image: rudder-load:latest
  imagePullPolicy: Always
  restartPolicy: Always
  command: ["/rudder-load-producer"]
  backoffLimit: 1
  replicas: 2
  resources:
    cpuRequests: 500m
    memoryRequests: 256Mi
    cpuLimits: 2
    memoryLimits: 2Gi
  ports:
    - name: metrics
      containerPort: 9102
    - name: profiler
      containerPort: 7777
  env:
    MODE: http
    # CONCURRENCY determines how many slots are used to send data to the server.
    # Each slot is a unique pair of "source <-> user_id".
    # CONCURRENCY should always be a multiple of 100 and be greater or equal to 100.
    CONCURRENCY: "200"
    MESSAGE_GENERATORS: "10"
    # SOURCES should be a comma separated list of writeKeys
    # e.g. SOURCES: "2lNXnjJU9xrbUERT3Uy3Po8jKbr,2nYfF7hsD7KXz0Vp4SW1TivZCRu"
    # This goes together with the number of replicas. You'll need one source per replica here.
    SOURCES: "2lNXnjJU9xrbUERT3Uy3Po8jKbr,2nYfF7hsD7KXz0Vp4SW1TivZCRu"
    RANDOM_KEY_NAMES: "false" # random userIDs, use false if you want the user_ids to be predictable e.g. user_1, user_2...
    # Keys per slot map e.g. 50_30_20 means the 1st group gets 50 keys each, the 2nd 30 and the 3rd 20.
    # If single value then everybody gets the same number of keys.
    KEYS_PER_SLOT_MAP: "50"
    # Traffic distribution e.g. 50_30_20 means the 1st group gets 50% of the traffic, the 2nd 30% and the 3rd 20%.
    # If single value then everybody gets the same percentage.
    TRAFFIC_DISTRIBUTION_PERCENTAGE: "60_40"
    USE_ONE_CLIENT_PER_SLOT: "true"
    ENABLE_SOFT_MEMORY_LIMIT: "true"
    TOTAL_MESSAGES: "1000000"
    TOTAL_DURATION: "0" # 0 => finish as fast as possible
    RUDDER_EVENTS_BATCH_SIZE: 2 # do 0 to send single "page" event
    HTTP_ENDPOINT: "http://myns-ingestion.myns:8080/v1/batch"
    HTTP_COMPRESSION: "true"
    HTTP_READ_TIMEOUT: "5s"
    HTTP_WRITE_TIMEOUT: "5s"
    HTTP_MAX_IDLE_CONN: "1h"
    HTTP_MAX_CONNS_PER_HOST: "5000"
    HTTP_CONCURRENCY: "1000"
    HTTP_CONTENT_TYPE: "application/json"
